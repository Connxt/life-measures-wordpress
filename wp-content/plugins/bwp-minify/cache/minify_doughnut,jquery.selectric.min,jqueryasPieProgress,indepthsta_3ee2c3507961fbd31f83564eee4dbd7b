/* Minify: at least one missing file. See http://code.google.com/p/minify/wiki/Debugging */

;;
/*!
 * jquery.drawDoughnutChart.js
 * Version: 0.4.1(Beta)
 * Inspired by Chart.js(http://www.chartjs.org/)
 *
 * Copyright 2014 hiro
 * https://github.com/githiro/drawDoughnutChart
 * Released under the MIT license.
 * 
 */
(function($,undefined){$.fn.drawDoughnutChart=function(data,options){var $this=this,W=$this.width(),H=$this.height(),centerX=W/2,centerY=H/2,cos=Math.cos,sin=Math.sin,PI=Math.PI,settings=$.extend({segmentShowStroke:true,segmentStrokeColor:"#fff",segmentStrokeWidth:1,baseColor:"#fff",baseOffset:4,edgeOffset:10,percentageInnerCutout:75,animation:true,animationSteps:90,animationEasing:"easeInOutExpo",animateRotate:true,tipOffsetX:-8,tipOffsetY:-45,tipClass:"doughnutTip",summaryClass:"doughnutSummary",summaryTitle:"",summaryTitleClass:"doughnutSummaryTitle",summaryNumberClass:"doughnutSummaryNumber",beforeDraw:function(){},afterDrawed:function(){},onPathEnter:function(e,data){},onPathLeave:function(e,data){}},options),animationOptions={linear:function(t){return t;},easeInOutExpo:function(t){var v=t<.5?8*t*t*t*t:1-8*(--t)*t*t*t;return(v>1)?1:v;}},requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1000/60);};}();settings.beforeDraw.call($this);var $svg=$('<svg width="'+W+'" height="'+H+'" viewBox="0 0 '+W+' '+H+'" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"></svg>').appendTo($this),$paths=[],easingFunction=animationOptions[settings.animationEasing],doughnutRadius=Min([H/2,W/2])-settings.edgeOffset,cutoutRadius=doughnutRadius*(settings.percentageInnerCutout/130),segmentTotal=0;var baseDoughnutRadius=doughnutRadius+settings.baseOffset,baseCutoutRadius=cutoutRadius-settings.baseOffset;$(document.createElementNS('http://www.w3.org/2000/svg','path')).attr({"d":getHollowCirclePath(baseDoughnutRadius,baseCutoutRadius),"fill":settings.baseColor}).appendTo($svg);var $pathGroup=$(document.createElementNS('http://www.w3.org/2000/svg','g'));$pathGroup.attr({opacity:0}).appendTo($svg);var $tip=$('<div class="'+settings.tipClass+'" />').appendTo('body').hide(),tipW=$tip.width(),tipH=$tip.height();var summarySize=(cutoutRadius-(doughnutRadius-cutoutRadius))*2,$summary=$('<div class="'+settings.summaryClass+'" />').appendTo($this).css({width:summarySize+"px",height:summarySize+"px","margin-left":-(summarySize/2)+"px","margin-top":-(summarySize/2)+"px"});var $summaryTitle=$('<p class="'+settings.summaryTitleClass+'">'+settings.summaryTitle+'</p>').appendTo($summary);var $summaryNumber=$('<p class="'+settings.summaryNumberClass+'"></p>').appendTo($summary).css({opacity:0});for(var i=0,len=data.length;i<len;i++){segmentTotal+=data[i].value;$paths[i]=$(document.createElementNS('http://www.w3.org/2000/svg','path')).attr({"stroke-width":settings.segmentStrokeWidth,"stroke":settings.segmentStrokeColor,"fill":data[i].color,"data-order":i}).appendTo($pathGroup).on("mouseenter",pathMouseEnter).on("mouseleave",pathMouseLeave).on("mousemove",pathMouseMove);}
animationLoop(drawPieSegments);function getHollowCirclePath(doughnutRadius,cutoutRadius){var startRadius=-1.570,segmentAngle=6.2831,endRadius=4.7131,startX=centerX+cos(startRadius)*doughnutRadius,startY=centerY+sin(startRadius)*doughnutRadius,endX2=centerX+cos(startRadius)*cutoutRadius,endY2=centerY+sin(startRadius)*cutoutRadius,endX=centerX+cos(endRadius)*doughnutRadius,endY=centerY+sin(endRadius)*doughnutRadius,startX2=centerX+cos(endRadius)*cutoutRadius,startY2=centerY+sin(endRadius)*cutoutRadius;var cmd=['M',startX,startY,'A',doughnutRadius,doughnutRadius,0,1,1,endX,endY,'Z','M',startX2,startY2,'A',cutoutRadius,cutoutRadius,0,1,0,endX2,endY2,'Z'];cmd=cmd.join(' ');return cmd;};function pathMouseEnter(e){var order=$(this).data().order;$tip.text(data[order].title+": "+data[order].value).fadeIn(200);settings.onPathEnter.apply($(this),[e,data]);}
function pathMouseLeave(e){$tip.hide();settings.onPathLeave.apply($(this),[e,data]);}
function pathMouseMove(e){$tip.css({top:e.pageY+settings.tipOffsetY,left:e.pageX-$tip.width()/2+settings.tipOffsetX});}
function drawPieSegments(animationDecimal){var startRadius=-PI/2,rotateAnimation=1;if(settings.animation&&settings.animateRotate)rotateAnimation=animationDecimal;drawDoughnutText(animationDecimal,segmentTotal);$pathGroup.attr("opacity",animationDecimal);if(data.length===1&&(4.7122<(rotateAnimation*((data[0].value/segmentTotal)*(PI*2))+startRadius))){$paths[0].attr("d",getHollowCirclePath(doughnutRadius,cutoutRadius));return;}
for(var i=0,len=data.length;i<len;i++){var segmentAngle=rotateAnimation*((data[i].value/segmentTotal)*(PI*2)),endRadius=startRadius+segmentAngle,largeArc=((endRadius-startRadius)%(PI*2))>PI?1:0,startX=centerX+cos(startRadius)*doughnutRadius,startY=centerY+sin(startRadius)*doughnutRadius,endX2=centerX+cos(startRadius)*cutoutRadius,endY2=centerY+sin(startRadius)*cutoutRadius,endX=centerX+cos(endRadius)*doughnutRadius,endY=centerY+sin(endRadius)*doughnutRadius,startX2=centerX+cos(endRadius)*cutoutRadius,startY2=centerY+sin(endRadius)*cutoutRadius;var cmd=['M',startX,startY,'A',doughnutRadius,doughnutRadius,0,largeArc,1,endX,endY,'L',startX2,startY2,'A',cutoutRadius,cutoutRadius,0,largeArc,0,endX2,endY2,'Z'];$paths[i].attr("d",cmd.join(' '));startRadius+=segmentAngle;}}
function drawDoughnutText(animationDecimal,segmentTotal){$summaryNumber.css({opacity:animationDecimal}).text((segmentTotal*animationDecimal).toFixed(1));}
function animateFrame(cnt,drawData){var easeAdjustedAnimationPercent=(settings.animation)?CapValue(easingFunction(cnt),null,0):1;drawData(easeAdjustedAnimationPercent);}
function animationLoop(drawData){var animFrameAmount=(settings.animation)?1/CapValue(settings.animationSteps,Number.MAX_VALUE,1):1,cnt=(settings.animation)?0:1;requestAnimFrame(function(){cnt+=animFrameAmount;animateFrame(cnt,drawData);if(cnt<=1){requestAnimFrame(arguments.callee);}else{settings.afterDrawed.call($this);}});}
function Max(arr){return Math.max.apply(null,arr);}
function Min(arr){return Math.min.apply(null,arr);}
function isNumber(n){return!isNaN(parseFloat(n))&&isFinite(n);}
function CapValue(valueToCap,maxValue,minValue){if(isNumber(maxValue)&&valueToCap>maxValue)return maxValue;if(isNumber(minValue)&&valueToCap<minValue)return minValue;return valueToCap;}
return $this;};})(jQuery);
;/*!
 *         ,/
 *       ,'/
 *     ,' /
 *   ,'  /_____,
 * .'____    ,'
 *      /  ,'
 *     / ,'
 *    /,'
 *   /'
 *
 * Selectric Ïž v1.9.3 (Apr 23 2015) - http://lcdsantos.github.io/jQuery-Selectric/
 *
 * Copyright (c) 2015 Leonardo Santos; Dual licensed: MIT/GPL
 *
 */

;(function($) {
  'use strict';

  var pluginName = 'selectric',
      classList = 'Input Items Open Disabled TempShow HideSelect Wrapper Hover Responsive Above Scroll Group GroupLabel',
      bindSufix = '.sl',
      defaults = {
        onChange: function(elm) { $(elm).change(); },
        maxHeight: 300,
        keySearchTimeout: 500,
        arrowButtonMarkup: '<b class="button">&#x25be;</b>',
        disableOnMobile: true,
        openOnHover: false,
        hoverIntentTimeout: 500,
        expandToItemText: false,
        responsive: false,
        preventWindowScroll: true,
        inheritOriginalWidth: false,
        allowWrap: true,
        customClass: {
          prefix: pluginName,
          camelCase: false,
          overwrite: true
        },
        optionsItemBuilder: '{text}', // function(itemData, element, index)
        labelBuilder: '{text}' // function(currItem)
      },
      hooks = {
        add: function(callbackName, hookName, fn) {
          if ( !this[callbackName] )
            this[callbackName] = {};

          this[callbackName][hookName] = fn;
        },
        remove: function(callbackName, hookName) {
          delete this[callbackName][hookName];
        }
      },
      _utils = {
        // Replace diacritics
        replaceDiacritics: function(s) {
          // /[\340-\346]/g, // a
          // /[\350-\353]/g, // e
          // /[\354-\357]/g, // i
          // /[\362-\370]/g, // o
          // /[\371-\374]/g, // u
          // /[\361]/g,      // n
          // /[\347]/g,      // c
          // /[\377]/g       // y
          var d = '40-46 50-53 54-57 62-70 71-74 61 47 77'.replace(/\d+/g, '\\3$&').split(' '),
              k = d.length;

          while (k--)
            s = s.toLowerCase().replace(RegExp('[' + d[k] + ']', 'g'), 'aeiouncy'.charAt(k));

          return s;
        },
        // https://gist.github.com/atesgoral/984375
        format: function(f) {var a=arguments;return(""+f).replace(/{(\d+|(\w+))}/g,function(s,i,p) {return p&&a[1]?a[1][p]:a[i]})},
        nextEnabledItem: function(selectItems, selected) {
          while ( selectItems[ selected = (selected + 1) % selectItems.length ].disabled ) {}
          return selected;
        },
        previousEnabledItem: function(selectItems, selected) {
          while ( selectItems[ selected = (selected > 0 ? selected : selectItems.length) - 1 ].disabled ) {}
          return selected;
        },
        toDash: function(str) {
          return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
        },
        triggerCallback: function(fn, scope) {
          var elm = scope.element,
              func = scope.options['on' + fn];

          if ( $.isFunction(func) )
            func.call(elm, elm, scope);

          if ( hooks[fn] ) {
            $.each(hooks[fn], function() {
              this.call(elm, elm, scope);
            });
          }

          $(elm).trigger(pluginName + '-' + _utils.toDash(fn), scope);
        }
      },
      $doc = $(document),
      $win = $(window),
      Selectric = function(element, opts) {
        var _this = this,
            $original = $(element),
            $input, $items, $itemsScroll, $wrapper, $label, $outerWrapper, $li,
            isOpen = false,
            isEnabled = false,
            selected,
            currValue,
            itemsHeight,
            itemsInnerHeight,
            finalWidth,
            optionsLength,
            eventTriggers,
            isMobile = /android|ip(hone|od|ad)/i.test(navigator.userAgent),
            tabindex = $original.prop('tabindex'),
            labelBuilder;

        function _init(opts) {
          _this.options = $.extend(true, {}, defaults, _this.options, opts);
          _this.classes = {};
          _this.element = element;

          _utils.triggerCallback('BeforeInit', _this);

          // Disable on mobile browsers
          if ( _this.options.disableOnMobile && isMobile ) {
            _this.disableOnMobile = true;
            return;
          }

          // Preserve data
          _destroy(true);

          // Generate classNames for elements
          var customClass   = _this.options.customClass,
              postfixes     = classList.split(' '),
              originalWidth = $original.width();

          $.each(postfixes, function(i, currClass) {
            var c = customClass.prefix + currClass;
            _this.classes[currClass.toLowerCase()] = customClass.camelCase ? c : _utils.toDash(c);
          });

          $input        = $('<input/>', { 'class': _this.classes.input, 'readonly': isMobile });
          $items        = $('<div/>',   { 'class': _this.classes.items, 'tabindex': -1 });
          $itemsScroll  = $('<div/>',   { 'class': _this.classes.scroll });
          $wrapper      = $('<div/>',   { 'class': customClass.prefix, 'html': _this.options.arrowButtonMarkup });
          $label        = $('<p class="label"/>');
          $outerWrapper = $original.wrap('<div>').parent().append($wrapper.prepend($label), $items, $input);

          eventTriggers = {
            open    : _open,
            close   : _close,
            destroy : _destroy,
            refresh : _refresh,
            init    : _init
          };

          $original.on(eventTriggers).wrap('<div class="' + _this.classes.hideselect + '">');
          $.extend(_this, eventTriggers);

          labelBuilder = _this.options.labelBuilder;

          if ( _this.options.inheritOriginalWidth && originalWidth > 0 )
            $outerWrapper.width(originalWidth);

          _populate();
        }

        // Generate options markup and event binds
        function _populate() {
          _this.items = [];

          var $options = $original.children(),
              _$li = '<ul>',
              selectedIndex = $options.filter(':selected').index(),
              currIndex = 0;

          currValue = (selected = ~selectedIndex ? selectedIndex : 0);

          if ( optionsLength = $options.length ) {
            // Build options markup
            $options.each(function() {
              var $elm = $(this);

              if ( $elm.is('optgroup') ) {
                var groupDisabled = $elm.prop('disabled'),
                    $children = $elm.children();

                _$li += _utils.format('<ul class="{1}"><li class="{2}">{3}</li>',
                  $.trim([_this.classes.group, groupDisabled ? 'disabled' : '', $elm.prop('class')].join(' ')),
                  _this.classes.grouplabel,
                  $elm.prop('label')
                );

                if ( groupDisabled ) {
                  $children.prop('disabled', true);
                }

                $children.each(buildOption);

                _$li += '</ul>';
              } else {
                buildOption.call($elm);
              }

              function buildOption() {
                var $elm = $(this),
                    optionText = $elm.html(),
                    selectDisabled = $elm.prop('disabled'),
                    itemBuilder = _this.options.optionsItemBuilder;

                _this.items[currIndex] = {
                  element  : $elm,
                  value    : $elm.val(),
                  text     : optionText,
                  slug     : _utils.replaceDiacritics(optionText),
                  disabled : selectDisabled
                };

                _$li += _utils.format('<li data-index="{1}" class="{2}">{3}</li>',
                  currIndex,
                  $.trim([currIndex == currValue ? 'selected' : '', currIndex == optionsLength - 1 ? 'last' : '', selectDisabled ? 'disabled' : ''].join(' ')),
                  $.isFunction(itemBuilder) ? itemBuilder(_this.items[currIndex], $elm, currIndex) : _utils.format(itemBuilder, _this.items[currIndex])
                );

                currIndex++;
              }
            });

            $items.append( $itemsScroll.html(_$li + '</ul>') );

            $label.html(
              $.isFunction(labelBuilder) ? labelBuilder(_this.items[currValue]) : _utils.format(labelBuilder, _this.items[currValue])
            )
          }

          $wrapper.add($original).add($outerWrapper).add($input).off(bindSufix);

          $outerWrapper.prop('class', [
            _this.classes.wrapper,
            _this.options.customClass.overwrite ?
              $original.prop('class').replace(/\S+/g, _this.options.customClass.prefix + '-$&') :
              $original.prop('class'),
            _this.options.responsive ? _this.classes.responsive : ''
          ].join(' '));

          if ( !$original.prop('disabled') ) {
            isEnabled = true;

            // Not disabled, so... Removing disabled class and bind hover
            $outerWrapper.removeClass(_this.classes.disabled).on('mouseenter' + bindSufix + ' mouseleave' + bindSufix, function(e) {
              $(this).toggleClass(_this.classes.hover);

              // Delay close effect when openOnHover is true
              if ( _this.options.openOnHover ) {
                clearTimeout(_this.closeTimer);
                e.type == 'mouseleave' ? _this.closeTimer = setTimeout(_close, _this.options.hoverIntentTimeout) : _open();
              }
            });

            // Toggle open/close
            $wrapper.on('click' + bindSufix, function(e) {
              isOpen ? _close() : _open(e);
            });

            $input
              .prop({
                tabindex: tabindex,
                disabled: false
              })
              .on('keypress' + bindSufix, _handleSystemKeys)
              .on('keydown' + bindSufix, function(e) {
                _handleSystemKeys(e);

                // Clear search
                clearTimeout(_this.resetStr);
                _this.resetStr = setTimeout(function() {
                  $input.val('');
                }, _this.options.keySearchTimeout);

                var key = e.keyCode || e.which;

                // If it's a directional key
                // 37 => Left
                // 38 => Up
                // 39 => Right
                // 40 => Down
                if ( key > 36 && key < 41 ) {
                  if ( !_this.options.allowWrap ) {
                    if ( (key < 39 && selected == 0) || (key > 38 && (selected + 1) == _this.items.length) ) {
                      return;
                    }
                  }

                  _select(_utils[(key < 39 ? 'previous' : 'next') + 'EnabledItem'](_this.items, selected));
                }
              })
              .on('focusin' + bindSufix, function(e) {
                // Stupid, but necessary... Prevent the flicker when
                // focusing out and back again in the browser window
                $input.one('blur', function() {
                  $input.blur();
                });

                isOpen || _open(e);
              })
              .on('oninput' in $input[0] ? 'input' : 'keyup', function() {
                if ( $input.val().length ) {
                  // Search in select options
                  $.each(_this.items, function(i, elm) {
                    if ( RegExp('^' + $input.val(), 'i').test(elm.slug) && !elm.disabled ) {
                      _select(i);
                      return false;
                    }
                  });
                }
              });

            $original.prop('tabindex', false);

            // Remove styles from items box
            // Fix incorrect height when refreshed is triggered with fewer options
            $li = $('li', $items.removeAttr('style')).on({
              // Prevent <input> blur on Chrome
              mousedown: function(e) {
                e.preventDefault();
                e.stopPropagation();
              },
              click: function() {
                // The second parameter is to close the box after click
                _select($(this).data('index'), true);

                // Chrome doesn't close options box if select is wrapped with a label
                // We need to 'return false' to avoid that
                return false;
              }
            }).filter('[data-index]');
          } else {
            $outerWrapper.addClass(_this.classes.disabled);
            $input.prop('disabled', true);
          }

          _utils.triggerCallback('Init', _this);
        }

        function _refresh() {
          _utils.triggerCallback('Refresh', _this);
          _populate();
        }

        // Behavior when system keys is pressed
        function _handleSystemKeys(e) {
          var key = e.keyCode || e.which;

          if ( key == 13 ) {
            e.preventDefault();
          }

          // Tab / Enter / ESC
          if ( /^(9|13|27)$/.test(key) ) {
            e.stopPropagation();
            _select(selected, true);
          }
        }

        // Set options box width/height
        function _calculateOptionsDimensions() {
          // Calculate options box height
          // Set a temporary class on the hidden parent of the element
          var hiddenChildren = $items.closest(':visible').children(':hidden').addClass(_this.classes.tempshow),
              maxHeight = _this.options.maxHeight,
              itemsWidth = $items.outerWidth(),
              wrapperWidth = $wrapper.outerWidth() - (itemsWidth - $items.width());

          // Set the dimensions, minimum is wrapper width, expand for long items if option is true
          if ( !_this.options.expandToItemText || wrapperWidth > itemsWidth )
            finalWidth = wrapperWidth;
          else {
            // Make sure the scrollbar width is included
            $items.css('overflow', 'scroll');

            // Set a really long width for $outerWrapper
            $outerWrapper.width(9e4);
            finalWidth = $items.width();
            // Set scroll bar to auto
            $items.css('overflow', '');
            $outerWrapper.width('');
          }

          $items.width(finalWidth).height() > maxHeight && $items.height(maxHeight);

          // Remove the temporary class
          hiddenChildren.removeClass(_this.classes.tempshow);
        }

        // Open the select options box
        function _open(e) {
          _utils.triggerCallback('BeforeOpen', _this);

          if ( e ) {
            e.preventDefault();
            e.stopPropagation();
          }

          if ( isEnabled ) {
            _calculateOptionsDimensions();

            // Find any other opened instances of select and close it
            $('.' + _this.classes.hideselect, '.' + _this.classes.open).children()[pluginName]('close');

            isOpen = true;
            itemsHeight = $items.outerHeight();
            itemsInnerHeight = $items.height();

            // Toggle options box visibility
            $outerWrapper.addClass(_this.classes.open);

            // Give dummy input focus
            $input.val('').is(':focus') || $input.focus();

            $doc.on('click' + bindSufix, _close).on('scroll' + bindSufix, _isInViewport);
            _isInViewport();

            // Prevent window scroll when using mouse wheel inside items box
            if ( _this.options.preventWindowScroll ) {
              $doc.on('mousewheel' + bindSufix + ' DOMMouseScroll' + bindSufix, '.' + _this.classes.scroll, function(e) {
                var orgEvent = e.originalEvent,
                    scrollTop = $(this).scrollTop(),
                    deltaY = 0;

                if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1; }
                if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;  }
                if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY; }
                if ( 'deltaY'      in orgEvent ) { deltaY = orgEvent.deltaY * -1; }

                if ( scrollTop == (this.scrollHeight - itemsInnerHeight) && deltaY < 0 || scrollTop == 0 && deltaY > 0 ) {
                  e.preventDefault();
                }
              });
            }

            _detectItemVisibility(selected);

            _utils.triggerCallback('Open', _this);
          }
        }

        // Detect is the options box is inside the window
        function _isInViewport() {
          $outerWrapper.toggleClass(_this.classes.above, $outerWrapper.offset().top + $outerWrapper.outerHeight() + itemsHeight > $win.scrollTop() + $win.height());
        }

        // Close the select options box
        function _close() {
          _utils.triggerCallback('BeforeClose', _this);

          if ( currValue != selected ) {
            _utils.triggerCallback('BeforeChange', _this);

            var text = _this.items[selected].text;

            // Apply changed value to original select
            $original
              .prop('selectedIndex', currValue = selected)
              .data('value', text);

            // Change label text
            $label.html(
              $.isFunction(labelBuilder) ? labelBuilder(_this.items[selected]) : _utils.format(labelBuilder, _this.items[selected])
            )

            _utils.triggerCallback('Change', _this);
          }

          // Remove custom events on document
          $doc.off(bindSufix);

          // Remove visible class to hide options box
          $outerWrapper.removeClass(_this.classes.open);

          isOpen = false;

          _utils.triggerCallback('Close', _this);
        }

        // Select option
        function _select(index, close) {
          // Parameter index is required
          if ( index == undefined ) {
            return;
          }

          // If element is disabled, can't select it
          if ( !_this.items[index].disabled ) {
            // If 'close' is false (default), the options box won't close after
            // each selected item, this is necessary for keyboard navigation
            $li
              .removeClass('selected')
              .eq(selected = index)
              .addClass('selected');

            _detectItemVisibility(index);
            close && _close();
          }
        }

        // Detect if currently selected option is visible and scroll the options box to show it
        function _detectItemVisibility(index) {
          var liHeight = $li.eq(index).outerHeight(),
              liTop = $li[index].offsetTop,
              itemsScrollTop = $itemsScroll.scrollTop(),
              scrollT = liTop + liHeight * 2;

          $itemsScroll.scrollTop(
            scrollT > itemsScrollTop + itemsHeight ? scrollT - itemsHeight :
              liTop - liHeight < itemsScrollTop ? liTop - liHeight :
                itemsScrollTop
          );
        }

        // Unbind and remove
        function _destroy(preserveData) {
          if ( isEnabled ) {
            $items.add($wrapper).add($input).remove();
            !preserveData && $original.removeData(pluginName).removeData('value');
            $original.prop('tabindex', tabindex).off(bindSufix).off(eventTriggers).unwrap().unwrap();
            isEnabled = false;
          }
        }

        _init(opts);
      };

  // A really lightweight plugin wrapper around the constructor,
  // preventing against multiple instantiations
  $.fn[pluginName] = function(args) {
    return this.each(function() {
      var data = $.data(this, pluginName);

      if ( data && !data.disableOnMobile )
        (''+args === args && data[args]) ? data[args]() : data.init(args);
      else
        $.data(this, pluginName, new Selectric(this, args));
    });
  };

  $.fn[pluginName].hooks = hooks;
}(jQuery));
;(function(factory){"use strict";if(typeof define==='function'&&define.amd){define(['jquery'],factory);}else{factory(jQuery);}}(function($){"use strict";if(!Date.now){Date.now=function(){return new Date().getTime();};}
function getTime(){if(typeof window.performance!=='undefined'&&window.performance.now){return window.performance.now();}else{return Date.now();}}
var vendors=['webkit','moz'];for(var i=0;i<vendors.length&&!window.requestAnimationFrame;++i){var vp=vendors[i];window.requestAnimationFrame=window[vp+'RequestAnimationFrame'];window.cancelAnimationFrame=(window[vp+'CancelAnimationFrame']||window[vp+'CancelRequestAnimationFrame']);}
if(/iP(ad|hone|od).*OS (6|7)/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var lastTime=0;window.requestAnimationFrame=function(callback){var now=getTime();var nextTime=Math.max(lastTime+16,now);return setTimeout(function(){callback(lastTime=nextTime);},nextTime-now);};window.cancelAnimationFrame=clearTimeout;}
var SvgElement=function(tag,attrs){var elem=document.createElementNS("http://www.w3.org/2000/svg",tag);$.each(attrs,function(name,value){elem.setAttribute(name,value);});return elem;}
var svgSupported="createElementNS"in document&&new SvgElement("svg",{}).createSVGRect;function isPercentage(n){return typeof n==='string'&&n.indexOf('%')!=-1;}
var pluginName='asPieProgress';var Plugin=$[pluginName]=function(element,options){this.element=element;this.$element=$(element);this.options=$.extend({},Plugin.defaults,options,this.$element.data());this.namespace=this.options.namespace;this.classes=this.options.classes;this.easing=Plugin.easing[this.options.easing]||Plugin.easing.ease;this.$element.addClass(this.classes.element);this.min=this.$element.attr('aria-valuemin');this.max=this.$element.attr('aria-valuemax');this.min=this.min?parseInt(this.min,10):this.options.min;this.max=this.max?parseInt(this.max,10):this.options.max;this.first=this.$element.attr('aria-valuenow');this.first=this.first?parseInt(this.first,10):(this.options.first?this.options.first:this.min);this.now=this.first;this.goal=this.options.goal;this._frameId=null;this.initialized=false;this._trigger('init');this.init();};Plugin.defaults={namespace:'asPieProgress',classes:{element:'pie_progress',number:'pie_progress__number',content:'pie_progress__content'},min:0,max:100,goal:100,size:160,speed:15,barcolor:'#ef1e25',barsize:'4',trackcolor:'#f2f2f2',fillcolor:'none',easing:'ease',numberCallback:function(n){var percentage=Math.round(this.getPercentage(n));return percentage+'%';},contentCallback:null};var easingBezier=function(mX1,mY1,mX2,mY2){function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}
function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}
function C(aA1){return 3.0*aA1;}
function CalcBezier(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}
function GetSlope(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}
function GetTForX(aX){var aGuessT=aX;for(var i=0;i<4;++i){var currentSlope=GetSlope(aGuessT,mX1,mX2);if(currentSlope===0.0)return aGuessT;var currentX=CalcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}
return aGuessT;}
if(mX1===mY1&&mX2===mY2){return{css:'linear',fn:function(aX){return aX;}};}else{return{css:'cubic-bezier('+mX1+','+mY1+','+mX2+','+mY2+')',fn:function(aX){return CalcBezier(GetTForX(aX),mY1,mY2);}}}};$.extend(Plugin.easing={},{"ease":easingBezier(0.25,0.1,0.25,1.0),"linear":easingBezier(0.00,0.0,1.00,1.0),"ease-in":easingBezier(0.42,0.0,1.00,1.0),"ease-out":easingBezier(0.00,0.0,0.58,1.0),"ease-in-out":easingBezier(0.42,0.0,0.58,1.0)});Plugin.prototype={constructor:Plugin,init:function(){this.$number=this.$element.find('.'+this.classes.number);this.$content=this.$element.find('.'+this.classes.content);this.size=this.options.size;this.width=this.size;this.height=this.size;this.prepare();this.initialized=true;this._trigger('ready');},prepare:function(){if(!svgSupported){return;}
this.svg=new SvgElement("svg",{"width":"100%","height":"100%","viewBox":"0 0 "+this.width+" "+this.height});this.buildTrack();this.buildBar();this.$element.append(this.svg);},buildTrack:function(){var width=this.size,height=this.size,cx=width/2,cy=height/2;var barsize=this.options.barsize;var ellipse=new SvgElement("ellipse",{rx:cx-barsize/2,ry:cy-barsize/2,cx:cx,cy:cy,stroke:this.options.trackcolor,fill:this.options.fillcolor,'stroke-width':barsize});this.svg.appendChild(ellipse);},buildBar:function(){if(!svgSupported){return;}
var path=new SvgElement("path",{fill:'none','stroke-width':this.options.barsize,stroke:this.options.barcolor});this.bar=path;this.svg.appendChild(path);this._drawBar(this.first);this._updateBar();},_drawBar:function(n){if(!svgSupported){return;}
this.bar_goal=n;var width=this.size,height=this.size,cx=width/2,cy=height/2,start_angle=0;var barsize=this.options.barsize;var r=Math.min(cx,cy)-barsize/2;this.r=r;var percentage=this.getPercentage(n);if(percentage===100){percentage-=0.0001;}
var end_angle=start_angle+percentage*Math.PI*2/100;var x1=cx+r*Math.sin(start_angle),y1=cy-r*Math.cos(start_angle),x2=cx+r*Math.sin(end_angle),y2=cy-r*Math.cos(end_angle);var big=0;if(end_angle-start_angle>Math.PI)big=1;var d="M"+x1+","+y1+" A"+r+","+r+" 0 "+big+" 1 "+
x2+","+y2;this.bar.setAttribute("d",d);},_updateBar:function(){if(!svgSupported){return;}
var percenage=this.getPercentage(this.now);var length=this.bar.getTotalLength();var offset=length*(1-percenage/this.getPercentage(this.bar_goal));this.bar.style.strokeDasharray=length+" "+length;this.bar.style.strokeDashoffset=offset;},_trigger:function(eventType){var method_arguments=Array.prototype.slice.call(arguments,1),data=[this].concat(method_arguments);this.$element.trigger(pluginName+'::'+eventType,data);eventType=eventType.replace(/\b\w+\b/g,function(word){return word.substring(0,1).toUpperCase()+word.substring(1);});var onFunction='on'+eventType;if(typeof this.options[onFunction]==='function'){this.options[onFunction].apply(this,method_arguments);}},getPercentage:function(n){return 100*(n-this.min)/(this.max-this.min);},go:function(goal){var self=this;this._clear();if(isPercentage(goal)){goal=parseInt(goal.replace('%',''),10);goal=Math.round(this.min+(goal/100)*(this.max-this.min));}
if(typeof goal==='undefined'){goal=this.goal;}
if(goal>this.max){goal=this.max;}else if(goal<this.min){goal=this.min;}
if(this.bar_goal<goal){this._drawBar(goal);}
var start=self.now;var startTime=getTime();var endTime=startTime+Math.abs(start-goal)*100*self.options.speed/(self.max-self.min);var animation=function(time){var next;if(time>endTime){next=goal;}else{var distance=(time-startTime)/self.options.speed;next=Math.round(self.easing.fn(distance/100)*(self.max-self.min));if(goal>start){next=start+next;if(next>goal){next=goal;}}else{next=start-next;if(next<goal){next=goal;}}}
self._update(next);if(next===goal){window.cancelAnimationFrame(self._frameId);self._frameId=null;if(self.now===self.goal){self._trigger('finish');}}else{self._frameId=window.requestAnimationFrame(animation);}};self._frameId=window.requestAnimationFrame(animation);},_update:function(n){this.now=n;this._updateBar();this.$element.attr('aria-valuenow',this.now);if(this.$number.length>0&&typeof this.options.numberCallback==='function'){this.$number.html(this.options.numberCallback.call(this,[this.now]));}
if(this.$content.length>0&&typeof this.options.contentCallback==='function'){this.$content.html(this.options.contentCallback.call(this,[this.now]));}
this._trigger('update',n);},_clear:function(){if(this._frameId){window.cancelAnimationFrame(this._frameId);this._frameId=null;}},get:function(){return this.now;},start:function(){this._clear();this._trigger('start');this.go(this.goal);},reset:function(){this._clear();this._drawBar(this.first);this._update(this.first);this._trigger('reset');},stop:function(){this._clear();this._trigger('stop');},finish:function(){this._clear();this._update(this.goal);this._trigger('finish');},destory:function(){this.$element.data(pluginName,null);this._trigger('destory');}};$.fn[pluginName]=function(options){if(typeof options==='string'){var method=options;var method_arguments=Array.prototype.slice.call(arguments,1);if(/^\_/.test(method)){return false;}else if((/^(get)$/.test(method))){var api=this.first().data(pluginName);if(api&&typeof api[method]==='function'){return api[method].apply(api,method_arguments);}}else{return this.each(function(){var api=$.data(this,pluginName);if(api&&typeof api[method]==='function'){api[method].apply(api,method_arguments);}});}}else{return this.each(function(){if(!$.data(this,pluginName)){$.data(this,pluginName,new Plugin(this,options));}});}};}));;var Graph=(function(){var obj={};var initialize=function(){obj={$circularCommunityAndRelationship:jQuery("#community_and_relationship_circular"),$circularFreedom:jQuery("#freedom_circular"),$circularHealthAndEnvironment:jQuery("#health_and_environment_circular"),$circularOpportunity:jQuery("#opportunity_circular"),$circularLivingStandard:jQuery("#living_standard_circular"),$circularPeaceAndSecurity:jQuery("#peace_and_security_circular"),$doughnutOverAllWellBeing:jQuery("#doughnut_chart"),$selectCountry:jQuery("#populate_country"),$selectChart:jQuery("#select_chart"),$components:jQuery("#components"),$btnIndexModifier:jQuery(".index-modifier"),$btnUsIndex:jQuery("#btn_us_index"),$btnWorldIndex:jQuery("#btn_world_index"),usIndex:"us",worldIndex:"world",getLocations:function(index){return jQuery.post(BASE_URL+"/controllers/graph-controller.php",{action:"getLocations",index:index});},getDimensionsData:function(index,locationAbbr){return jQuery.post(BASE_URL+"/controllers/graph-controller.php",{action:"getDimensionsData",index:index,locationAbbr:locationAbbr});},getComponents:function(index,dimension){return jQuery.post(BASE_URL+"/controllers/graph-controller.php",{action:"getComponents",index:index,dimension:dimension});},getComponentsData:function(index,locationAbbr,dimension){return jQuery.post(BASE_URL+"/controllers/graph-controller.php",{action:"getComponentsData",index:index,locationAbbr:locationAbbr,dimension:dimension});},loadComponentsData:function(index,locationAbbr,dimension){obj.getComponentsData(index,locationAbbr,dimension).always(function(data){var componentsData=JSON.parse(data);obj.getComponents(index,dimension).always(function(data){var components=JSON.parse(data);obj.$components.empty();for(var i=0;i<components.length;i++){obj.$components.append("<div id='"+components[i]+"_bar_chart' class='subcomponents-bar-chart'></div>");obj.$components.append("<div id='"+components[i]+"_line_chart' class='subcomponents-line-chart'></div>");var dataPoints=[];for(var j=0;j<componentsData.length;j++){dataPoints[dataPoints.length]={label:componentsData[j]['year'],y:Number(componentsData[j]["components"][components[i]])};}
opportunityBarColor="#3D4780";healthAndEnvironmentBarColor="#CC4E00";freedomBarColor="#008BCC";communityAndRelationshipsBarColor="#B11E2B";livingStandardBarColor="#006538";peaceAndSecurityBarColor="#501050";CanvasJS.addColorSet("opportunity",["#3D4780"]);CanvasJS.addColorSet("health_and_environment",["#CC4E00"]);CanvasJS.addColorSet("freedom",["#008BCC"]);CanvasJS.addColorSet("community_and_relationships",["#B11E2B"]);CanvasJS.addColorSet("living_standard",["#006538"]);CanvasJS.addColorSet("peace_and_security",["#501050"]);jQuery("#"+components[i]+"_bar_chart").CanvasJSChart({colorSet:dimension,theme:"theme1",animationEnabled:true,backgroundColor:"#f0f0f0",data:[{type:"bar",dataPoints:dataPoints}]});jQuery("#"+components[i]+"_line_chart").CanvasJSChart({colorSet:dimension,theme:"theme1",backgroundColor:"#f0f0f0",animationEnabled:true,data:[{type:"splineArea",dataPoints:dataPoints}]});obj.$selectChart.empty();for(var k=0;k<components.length;k++){obj.$selectChart.append("<option value='"+components[k]+"'>"+components[k].replace(/(?:_| |\b)(\w)/gi,function(str,p1){return" "+p1.toUpperCase()})+"</option>");}
obj.$selectChart.selectric();$("#select_chart option").each(function(i){$("#"+$(this).val()+"_bar_chart").hide();$("#"+$(this).val()+"_line_chart").hide();});$("#"+components[0]+"_bar_chart").show("slow");$("#"+components[0]+"_line_chart").show("slow");}});});},loadDimensionsData:function(index,locationAbbr){var folderName=(index=="us")?"us":"int";obj.getDimensionsData(index,locationAbbr).always(function(data){var dimensionsData=JSON.parse(data);var opportunity=0,healthAndEnvironment=0,freedom=0,communityAndRelationships=0,livingStandard=0,peaceAndSecurity=0;for(var i=0;i<dimensionsData.length;i++){opportunity+=Number(dimensionsData[i].dimensions.opportunity);healthAndEnvironment+=Number(dimensionsData[i].dimensions.health_and_environment);freedom+=Number(dimensionsData[i].dimensions.freedom);communityAndRelationships+=Number(dimensionsData[i].dimensions.community_and_relationships);livingStandard+=Number(dimensionsData[i].dimensions.living_standard);peaceAndSecurity+=Number(dimensionsData[i].dimensions.peace_and_security);}
opportunity=opportunity/dimensionsData.length;healthAndEnvironment=healthAndEnvironment/dimensionsData.length;freedom=freedom/dimensionsData.length;communityAndRelationships=communityAndRelationships/dimensionsData.length;livingStandard=livingStandard/dimensionsData.length;peaceAndSecurity=peaceAndSecurity/dimensionsData.length;opportunityBarColor="#3D4780";healthAndEnvironmentBarColor="#CC4E00";freedomBarColor="#008BCC";communityAndRelationshipsBarColor="#B11E2B";livingStandardBarColor="#006538";peaceAndSecurityBarColor="#501050";pieOptions={namespace:"asPieProgress",min:0,max:100,step:1,speed:50,delay:0,barsize:"15",easing:"ease",numberCallback:function(n){var progress=(this.now/10);return progress;}};obj.$circularCommunityAndRelationship.asPieProgress("reset");obj.$circularFreedom.asPieProgress("reset");obj.$circularHealthAndEnvironment.asPieProgress("reset");obj.$circularOpportunity.asPieProgress("reset");obj.$circularLivingStandard.asPieProgress("reset");obj.$circularPeaceAndSecurity.asPieProgress("reset");obj.$doughnutOverAllWellBeing.empty();pieOptions.barcolor=communityAndRelationshipsBarColor;obj.$circularCommunityAndRelationship.asPieProgress(pieOptions).asPieProgress("go",parseFloat(communityAndRelationships).toFixed(1)*10);pieOptions.barcolor=freedomBarColor;obj.$circularFreedom.asPieProgress(pieOptions).asPieProgress("go",parseFloat(freedom).toFixed(1)*10);pieOptions.barcolor=healthAndEnvironmentBarColor;obj.$circularHealthAndEnvironment.asPieProgress(pieOptions).asPieProgress("go",parseFloat(healthAndEnvironment).toFixed(1)*10);pieOptions.barcolor=opportunityBarColor;obj.$circularOpportunity.asPieProgress(pieOptions).asPieProgress("go",parseFloat(opportunity).toFixed(1)*10);pieOptions.barcolor=livingStandardBarColor;obj.$circularLivingStandard.asPieProgress(pieOptions).asPieProgress("go",parseFloat(livingStandard).toFixed(1)*10);pieOptions.barcolor=peaceAndSecurityBarColor;obj.$circularPeaceAndSecurity.asPieProgress(pieOptions).asPieProgress("go",parseFloat(peaceAndSecurity).toFixed(1)*10);obj.$doughnutOverAllWellBeing.drawDoughnutChart([{title:"Community and Relationship",value:communityAndRelationships/6,color:communityAndRelationshipsBarColor},{title:"Freedom",value:freedom/6,color:freedomBarColor},{title:"Health and Environment",value:healthAndEnvironment/6,color:healthAndEnvironmentBarColor},{title:"Opportunity",value:opportunity/6,color:opportunityBarColor},{title:"Living Standard",value:livingStandard/6,color:livingStandardBarColor},{title:"Peace and Security",value:peaceAndSecurity/6,color:peaceAndSecurityBarColor}]);});var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"community_and_relationships");},changeIndex:function(index){obj.getLocations(index).always(function(data){data=data.replace(/ /g,"&nbsp;");var locations=JSON.parse(data);obj.$selectCountry.empty();for(var i=0;i<locations.length;i++){obj.$selectCountry.append("<option data-value="+JSON.stringify(locations[i])+">"+locations[i].name+"</option>");}
obj.$selectCountry.selectric();obj.loadDimensionsData(locations[0].index,locations[0].abbr);});}}};var bindEvents=function(){obj.changeIndex(obj.usIndex);obj.$btnUsIndex.attr("disabled","disabled");obj.$btnWorldIndex.click(function(){obj.$btnWorldIndex.attr("disabled","disabled");obj.$btnUsIndex.removeAttr("disabled");});obj.$btnUsIndex.click(function(){obj.$btnUsIndex.attr("disabled","disabled");obj.$btnWorldIndex.removeAttr("disabled");})
obj.$btnIndexModifier.click(function(){if($(this).attr("id")=="btn_us_index")
obj.changeIndex(obj.usIndex);else if($(this).attr("id")=="btn_world_index")
obj.changeIndex(obj.worldIndex);});obj.$selectChart.on("change",function(){var optionSelected=$(this).find("option:selected");var chartToShow=optionSelected.attr("value");$("#select_chart option").each(function(i){$("#"+$(this).val()+"_bar_chart").hide();$("#"+$(this).val()+"_line_chart").hide();});$("#"+chartToShow+"_bar_chart").show("slow");$("#"+chartToShow+"_line_chart").show("slow");});obj.$selectCountry.on("change",function(){var optionSelected=$(this).find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadDimensionsData(data.index,data.abbr);});obj.$circularCommunityAndRelationship.click(function(){var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"community_and_relationships");});obj.$circularFreedom.click(function(){var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"freedom");});obj.$circularHealthAndEnvironment.click(function(){var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"health_and_environment");});obj.$circularOpportunity.click(function(){var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"opportunity");});obj.$circularLivingStandard.click(function(){var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"living_standard");});obj.$circularPeaceAndSecurity.click(function(){var optionSelected=obj.$selectCountry.find("option:selected");var data=JSON.parse(optionSelected.attr("data-value"));obj.loadComponentsData(data.index,data.abbr,"peace_and_security");});};return{run:function(){initialize();bindEvents();}};})();Graph.run();